{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Perfection\\\\Documents\\\\MASTER2_MBDS\\\\Web\\\\TheAliens\\\\client-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Perfection\\\\Documents\\\\MASTER2_MBDS\\\\Web\\\\TheAliens\\\\client-react\\\\src\\\\components\\\\NavigationTabs.js\";\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Tableau from \"./Tableau\"; // function TabPanel(props) {\n//     const { children, value, index, ...other } = props;\n//\n//     return (\n//         <Typography\n//             component=\"div\"\n//             role=\"tabpanel\"\n//             hidden={value !== index}\n//             id={`nav-tabpanel-${index}`}\n//             aria-labelledby={`nav-tab-${index}`}\n//             {...other}\n//         >\n//             {value === index && <Box p={3}>{children}</Box>}\n//         </Typography>\n//     );\n// }\n//\n// function LinkTab(props) {\n//     return (\n//         <Tab\n//             component=\"a\"\n//             onClick={event => {\n//                 event.preventDefault();\n//             }}\n//             {...props} />\n//     );\n// }\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nconst NavigationTabs = props => {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        value = _React$useState2[0],\n        setValue = _React$useState2[1];\n\n  const _React$useState3 = React.useState([]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        data = _React$useState4[0],\n        setData = _React$useState4[1];\n\n  const _React$useState5 = React.useState(0),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        page = _React$useState6[0],\n        setPage = _React$useState6[1];\n\n  const _React$useState7 = React.useState(5),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        pageSize = _React$useState8[0],\n        setPageSize = _React$useState8[1];\n\n  const _React$useState9 = React.useState(0),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        order = _React$useState10[0],\n        setOrder = _React$useState10[1];\n\n  const _React$useState11 = React.useState(0),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        AllData = _React$useState12[0],\n        setAllData = _React$useState12[1];\n\n  const handleChangeTab = newValue => {\n    setValue(newValue);\n  };\n\n  const handlerChangeOrder = order => {\n    setOrder(order);\n  };\n\n  const handlerChangePage = page => {\n    setPage(page);\n  };\n\n  const handlerChangeRowsPerPage = rowPerPage => {\n    setPage(0);\n    setPageSize(rowPerPage);\n  };\n\n  useEffect(() => {\n    getDataFromServer();\n  }, [page, pageSize, order]);\n\n  const getDataFromServer = () => {\n    fetch('http://localhost:8080/api/v1/cas?page=' + page + '&pagesize=' + pageSize + '&order=' + order).then(response => {\n      return response.json(); // transforme le json texte en objet js\n    }).then(res => {\n      // res c'est le texte json de response ci-dessus\n      setData(function (oldCas) {\n        const newData = res.data;\n        return newData;\n      });\n      setAllData(function (oldTotalCas) {\n        const newAllData = res.count;\n        return newAllData;\n      });\n    }).catch(err => {\n      console.log(\"erreur dans le get : \" + err);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Tableau, {\n    data: data,\n    allData: AllData,\n    handleChangeOrder: handlerChangeOrder,\n    handlerChangePage: handlerChangePage,\n    handlerChangeRowsPerPage: handlerChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }));\n};\n\nexport default NavigationTabs;","map":{"version":3,"sources":["C:/Users/Perfection/Documents/MASTER2_MBDS/Web/TheAliens/client-react/src/components/NavigationTabs.js"],"names":["React","useEffect","makeStyles","AppBar","Tabs","Tab","Typography","Box","Tableau","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","NavigationTabs","props","classes","useState","value","setValue","data","setData","page","setPage","pageSize","setPageSize","order","setOrder","AllData","setAllData","handleChangeTab","newValue","handlerChangeOrder","handlerChangePage","handlerChangeRowsPerPage","rowPerPage","getDataFromServer","fetch","then","response","json","res","oldCas","newData","oldTotalCas","newAllData","count","catch","err","console","log"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Tableau from \"./Tableau\";\n\n// function TabPanel(props) {\n//     const { children, value, index, ...other } = props;\n//\n//     return (\n//         <Typography\n//             component=\"div\"\n//             role=\"tabpanel\"\n//             hidden={value !== index}\n//             id={`nav-tabpanel-${index}`}\n//             aria-labelledby={`nav-tab-${index}`}\n//             {...other}\n//         >\n//             {value === index && <Box p={3}>{children}</Box>}\n//         </Typography>\n//     );\n// }\n//\n// function LinkTab(props) {\n//     return (\n//         <Tab\n//             component=\"a\"\n//             onClick={event => {\n//                 event.preventDefault();\n//             }}\n//             {...props} />\n//     );\n// }\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nconst NavigationTabs = (props) => {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    const [data, setData] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [pageSize, setPageSize] = React.useState(5);\n    const [order, setOrder] = React.useState(0);\n    const [AllData, setAllData] = React.useState(0);\n\n    const handleChangeTab = (newValue) => { setValue(newValue) };\n\n    const handlerChangeOrder = (order) => { setOrder(order) };\n\n    const handlerChangePage = (page) => { setPage(page) };\n\n    const handlerChangeRowsPerPage = (rowPerPage) => { setPage(0); setPageSize(rowPerPage) };\n\n    useEffect(() => {\n        getDataFromServer();\n    }, [page, pageSize, order]);\n\n    const getDataFromServer = () => {\n        fetch('http://localhost:8080/api/v1/cas?page=' + page + '&pagesize=' + pageSize + '&order=' + order)\n            .then(response => {\n                return response.json(); // transforme le json texte en objet js\n            })\n            .then(res => { // res c'est le texte json de response ci-dessus\n                setData(function(oldCas) {\n                    const newData = res.data;\n                    return newData;\n                });\n                setAllData(function(oldTotalCas) {\n                    const newAllData = res.count;\n                    return newAllData;\n                });\n            })\n            .catch(err => {\n                console.log(\"erreur dans le get : \" + err)\n            });\n    };\n\n    return (\n        <div className={classes.root}>\n                {/*affichage tableau avec tous les cas et témoignages*/}\n                <Tableau data={data}\n                         allData={AllData}\n                         handleChangeOrder={handlerChangeOrder}\n                         handlerChangePage={handlerChangePage}\n                         handlerChangeRowsPerPage={handlerChangeRowsPerPage} />\n        </div>\n    );\n};\n\nexport default NavigationTabs;\n"]},"metadata":{},"sourceType":"module"}