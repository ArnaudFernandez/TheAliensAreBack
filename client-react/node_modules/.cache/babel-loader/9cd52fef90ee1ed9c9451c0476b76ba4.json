{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Perfection\\\\Documents\\\\MASTER2_MBDS\\\\Web\\\\TheAliens\\\\client-react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Perfection\\\\Documents\\\\MASTER2_MBDS\\\\Web\\\\TheAliens\\\\client-react\\\\src\\\\components\\\\Tableau.js\";\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\n\nfunction TableauHead(props) {\n  const classes = props.classes,\n        order = props.order,\n        onRequestSort = props.onRequestSort;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  const headCells = [{\n    id: 'name',\n    toBeOrdered: false,\n    label: 'Nom'\n  }, {\n    id: 'resume',\n    toBeOrdered: false,\n    label: 'Description'\n  }, {\n    id: 'date',\n    toBeOrdered: false,\n    label: 'Date'\n  }, {\n    id: 'lieu',\n    toBeOrdered: false,\n    label: 'Lieu'\n  }, {\n    id: 'classification',\n    toBeOrdered: true,\n    label: 'Type'\n  }];\n  return React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, headCells.map(headCell => React.createElement(TableCell, {\n    key: headCell.id,\n    className: classes.head,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, headCell.toBeOrdered ? React.createElement(TableSortLabel, {\n    direction: order === 1 ? 'asc' : 'desc',\n    onClick: createSortHandler(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, headCell.label) : headCell.label))));\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  },\n  head: {\n    backgroundColor: '#12ff0d',\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n}));\n\nconst Tableau = props => {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        order = _React$useState2[0],\n        setOrder = _React$useState2[1];\n\n  const _React$useState3 = React.useState(0),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        page = _React$useState4[0],\n        setPage = _React$useState4[1];\n\n  const _React$useState5 = React.useState(5),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        rowsPerPage = _React$useState6[0],\n        setRowsPerPage = _React$useState6[1];\n\n  const handleRequestSort = () => {\n    order === 1 ? setOrder(-1) : setOrder(1);\n  };\n\n  useEffect(() => {\n    props.handleChangeOrder(order);\n  }, [order]);\n\n  const handleClick = (event, name) => {// TODO open modal\n    // const selectedIndex = selected.indexOf(name);\n    // let newSelected = [];\n    //\n    // if (selectedIndex === -1) {\n    //     newSelected = newSelected.concat(selected, name);\n    // } else if (selectedIndex === 0) {\n    //     newSelected = newSelected.concat(selected.slice(1));\n    // } else if (selectedIndex === selected.length - 1) {\n    //     newSelected = newSelected.concat(selected.slice(0, -1));\n    // } else if (selectedIndex > 0) {\n    //     newSelected = newSelected.concat(\n    //         selected.slice(0, selectedIndex),\n    //         selected.slice(selectedIndex + 1),\n    //     );\n    // }\n    //\n    // setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    props.handlerChangePage(newPage);\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    let rowsPerPage = parseInt(event.target.value, 10);\n    props.handlerChangeRowsPerPage(rowsPerPage);\n    setRowsPerPage(rowsPerPage);\n    setPage(0);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(TableContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"Observations GEIPAN\",\n    size: \"medium\",\n    \"aria-label\": \"enhanced table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(TableauHead, {\n    classes: classes,\n    order: order,\n    onRequestSort: handleRequestSort,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, props.data.map(row => {\n    return React.createElement(TableRow, {\n      hover: true,\n      onClick: event => handleClick(event, row.name),\n      tabIndex: -1,\n      key: row._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      padding: \"default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, row.cas_nom_dossier), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, row.cas_resume_web), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, row.cas_JJ === '--' ? '' : `${row.cas_JJ}/`, row.cas_MM === '--' ? '' : `${row.cas_MM}/`, row.cas_AAAA), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, row.cas_zone_nom), React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, row.cas_classification));\n  })))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, 50],\n    component: \"div\",\n    count: props.totalCas,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  })));\n};\n\nexport default Tableau;","map":{"version":3,"sources":["C:/Users/Perfection/Documents/MASTER2_MBDS/Web/TheAliens/client-react/src/components/Tableau.js"],"names":["React","useEffect","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Paper","TableauHead","props","classes","order","onRequestSort","createSortHandler","property","event","headCells","id","toBeOrdered","label","map","headCell","head","useStyles","theme","root","width","paper","marginBottom","spacing","table","minWidth","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","backgroundColor","color","fontSize","fontWeight","Tableau","useState","setOrder","page","setPage","rowsPerPage","setRowsPerPage","handleRequestSort","handleChangeOrder","handleClick","name","handleChangePage","newPage","handlerChangePage","handleChangeRowsPerPage","parseInt","target","value","handlerChangeRowsPerPage","data","row","_id","cas_nom_dossier","cas_resume_web","cas_JJ","cas_MM","cas_AAAA","cas_zone_nom","cas_classification","totalCas"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\n\nfunction TableauHead(props) {\n    const { classes, order, onRequestSort } = props;\n    const createSortHandler = property => event => {\n        onRequestSort(event, property);\n    };\n\n    const headCells = [\n        { id: 'name', toBeOrdered: false, label: 'Nom' },\n        { id: 'resume', toBeOrdered: false, label: 'Description' },\n        { id: 'date', toBeOrdered: false, label: 'Date' },\n        { id: 'lieu', toBeOrdered: false, label: 'Lieu' },\n        { id: 'classification', toBeOrdered: true, label: 'Type' },\n    ];\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headCells.map(headCell => (\n                    <TableCell\n                        key={headCell.id}\n                        className={classes.head}\n                        align=\"center\">\n                        {headCell.toBeOrdered ? (\n                            <TableSortLabel\n                                direction={order === 1 ? 'asc' : 'desc'}\n                                onClick={createSortHandler()}>\n                                {headCell.label}\n                            </TableSortLabel>\n                        ) : headCell.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    head: {\n        backgroundColor: '#12ff0d',\n        color: 'white',\n        fontSize: 16,\n        fontWeight: 'bold',\n    }\n}));\n\nconst Tableau = (props) => {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState(0);\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleRequestSort = () => {\n        order === 1 ? setOrder(-1) : setOrder(1);\n    };\n\n    useEffect(() => {\n        props.handleChangeOrder(order);\n    }, [order]);\n\n    const handleClick = (event, name) => {\n        // TODO open modal\n        // const selectedIndex = selected.indexOf(name);\n        // let newSelected = [];\n        //\n        // if (selectedIndex === -1) {\n        //     newSelected = newSelected.concat(selected, name);\n        // } else if (selectedIndex === 0) {\n        //     newSelected = newSelected.concat(selected.slice(1));\n        // } else if (selectedIndex === selected.length - 1) {\n        //     newSelected = newSelected.concat(selected.slice(0, -1));\n        // } else if (selectedIndex > 0) {\n        //     newSelected = newSelected.concat(\n        //         selected.slice(0, selectedIndex),\n        //         selected.slice(selectedIndex + 1),\n        //     );\n        // }\n        //\n        // setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        props.handlerChangePage(newPage);\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n        let rowsPerPage = parseInt(event.target.value, 10);\n        props.handlerChangeRowsPerPage(rowsPerPage);\n        setRowsPerPage(rowsPerPage);\n        setPage(0);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"Observations GEIPAN\"\n                        size=\"medium\"\n                        aria-label=\"enhanced table\">\n                        <TableauHead\n                            classes={classes}\n                            order={order}\n                            onRequestSort={handleRequestSort} />\n                        <TableBody>\n                            {props.data.map((row) => {\n                                    return (\n                                        <TableRow\n                                            hover\n                                            onClick={event => handleClick(event, row.name)}\n                                            tabIndex={-1}\n                                            key={row._id}>\n                                            <TableCell component=\"th\" scope=\"row\" padding=\"default\">\n                                                {row.cas_nom_dossier}\n                                            </TableCell>\n                                            <TableCell align=\"center\">{row.cas_resume_web}</TableCell>\n                                            <TableCell align=\"center\">\n                                                {row.cas_JJ === '--' ? '' : `${row.cas_JJ}/`}\n                                                {row.cas_MM === '--' ? '' : `${row.cas_MM}/`}\n                                                {row.cas_AAAA}\n                                            </TableCell>\n                                            <TableCell align=\"center\">{row.cas_zone_nom}</TableCell>\n                                            <TableCell align=\"center\">{row.cas_classification}</TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25, 50]}\n                    component=\"div\"\n                    count={props.totalCas}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage} />\n            </Paper>\n        </div>\n    );\n};\n\nexport default Tableau;\n"]},"metadata":{},"sourceType":"module"}